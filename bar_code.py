import fdb
import pandas as pd
import os

class search_codeBar:
    def __init__(self):
        self.firebird_path = r"C:\Program Files\Firebird\Firebird_3_0"
        if self.firebird_path not in os.environ['PATH']:
            os.environ['PATH'] += f";{self.firebird_path}"
        self.enderecos = {
            "dw": r"192.168.1.20:\grdj\Rest_15_Consulta\base_ib\VAMO_ZERADO_CONSULTA.FDB",
            "mt": r"192.168.7.10:\grdj\Rest_15\Base_ib\VAMO_ABELARDO_BUENO_BACKUP.FDB",
            "sdu": r"192.168.6.20:\grdj\Rest_15\Base_ib\VAMO_SANTOS_DUMONT_BACKUP.FDB",
            "lagoa": r"192.168.3.10:\grdj\Rest_15\Base_ib\VAMO_NOVO_BACKUP.FDB"
        }
        self.item_list = {
            "654": "7808734200641",
            "495": "7808725404263",
            "6165": "7798116190335",
            "6437": "7808725400517",
            "427": "7804335001168",
            "5812": "7804314945315",
            "6436": "7808725400487",
            "6331": "7808726903925",
            "6180": "7808770200049",
            "6007": "7804300134310",
            "6328": "7808770200667",
            "446": "7808770200155",
            "924": "8410113557575",
            "525": "7808770200216",
            "770": "7809591503494",
            "868": "7804319002730",
            "6181": "7808770200025",
            "6262": "7808726900030",
            "6263": "7808726903222",
            "850": "7804319001993",
            "867": "7804319003508",
            "6235": "7804319009012",
            "6282": "6009648910140",
            "754": "5600813190384",
            "921": "5601989986597",
            "6019": "5604098010443",
            "6689": "5604098010436",
            "923": "5604123002207",
            "509": "5600314040102",
            "6690": "5600757848310",
            "664": "7051054777014",
            "922": "5601989980809",
            "5811": "7804314945056",
            "6424": "7804304101004",
            "6156": "7730910250532",
            "6059": "7730910250273",
            "490": "7730951080280",
            "6167": "3700619315539",
            "657": "3295890226648",
            "561": "7798103868582",
            "6661": "7804343004366",
            "917": "7798067083960",
            "851": "7804319009166",
            "766": "7798104769130",
            "5810": "7804314945506",
            "424": "7804335001441",
            "395": "7794450090829",
            "6241": "7804449005168",
            "6261": "7808726905875",
            "2665": "5604424166004",
            "772": "5604138011331",
            "658": "5600271853180",
            "6275": "5601531118124",
            "6043": "5601377335082",
            "468": "7794450003096",
            "6277": "7809623805824",
            "6744": "7798104769093",
            "777": "5601333054521",
            "761": "7798000212204",
            "870": "7804661720269",
            "6284": "8002153220689",
            "5827": "7808725404249",
            "6060": "8437020600361",
            "529": "7804343004182",
            "441": "7794450025029",
            "5728": "7798119110293",
            "6158": "7730374000490",
            "6233": "7896756803254",
            "6232": "7896756800604",
            "644": "8004300358146",
            "645": "7891141024870",
            "484": "8004300358283",
            "780": "7896452112582",
            "6307": "7898276972670",
            "6226": "7896756804701",
            "755": "7896452112001",
            "6306": "7898276971383",
            "444": "7794450008053",
            "396": "7794450008084",
            "3671": "7794450090515",
            "397": "7798126080626",
            "466": "7794450090096",
            "467": "7794450002822",
            "5916": "7794450000972",
            "408": "7794450008275",
            "752": "7794450941145",
            "6568": "7798119110132",
            "492": "7798126082415",
            "5733": "7791728001075",
            "5814": "7798132462324",
            "5732": "7791728021301",
            "655": "7798116190328",
            "5813": "7804314945094",
            "3697": "7798104763039",
            "5822": "7790415127777",
            "636": "7798068480539",
            "6570": "7798119110040",
            "735": "7798297350023",
            "771": "7791203002290",
            "3699": "7791203001231",
            "869": "7798067083953",
            "733": "7798070013084",
            "6734": "7794450004789",
            "656": "7798070010359",
            "6037": "7798104769116",
            "456": "7798068480393",
            "927": "7798297350160",
            "5919": "7798103862238",
            "768": "7798000212877",
            "3690": "7791203003341",
            "6020": "8004012000029",
            "6429": "8027275000087",
            "6426": "8027275000148",
            "6425": "8001670101105",
            "3670": "8023354060119",
            "5869": "8002153231289",
            "6285": "8002153232651",
            "500": "8002153216415",
            "6021": "8004012000180",
            "639": "7798108253154",
            "928": "7798297350467",
            "3702": "7798100850030",
            "6227": "7896756805043",
            "852": "7804319002181",
            "6318": "7896034302950",
            "6739": "7798127631858",
            "778": "5601333053517",
            "756": "7896452112117",
            "925": "8410113703804",
            "774": "5604816000527",
            "461": "7798068480300",
            "763": "7798104762025",
            "3694": "7791203003365",
            "393": "7794450008077",
            "5741": "7808734200184",
            "6569": "7798119111283",
            "769": "7791203003419",
            "764": "5606486102037",
            "526": "7808770200629",
            "666": "7804303555013",
            "6151": "7804350596373",
            "734": "7798070010618",
            "765": "3760040420820",
            "5742": "3269210257339",
            "775": "5601356024327",
            "776": "5601333053524",
            "644": "7891141001086",
            "6056": "5604424107359",
            "392": "7794450093745",
            "440": "7794450003188",
            "6694": "8002153241042",
            "6236": "7804449008602",
            "6709": "7808726905653",
            "6260": "7896034302943",
            "6649": "3016570001030",
            "6650": "3049614222245",
            "6218": "7898249840906",
            "6219": "7898249840920",
            "394": "7794450093936",
            "6272": "7804449016799",
            "591": "7808725402207",
            "5838": "7804335132008",
            "430": "7804335181211",
            "459": "7798068480249",
            "6698": "7808765757763",
            "6265": "8004012000111",
            "3695": "7791203003372",
            "5870": "8002153231272",
            "5902": "7808765742561",
            "5735": "7808765742554",
            "425": "7804335132121",
            "5971": "7804335003094",
            "6044": "7804350596359",
            "6264": "7808721801523",
            "6438": "6892725401453",
            "665": "729208174633",
            "592": "7808725400135",
            "773": "7798000213584",
            "5727": "7798119110101",
            "399": "7798121461154",
            "409": "7794450008282",
            "5736": "7798068484797",
            "6421": "7798145140141",
            "711": "7798128819804",
            "710": "7798128819781",
            "5823": "588545140172",
            "6009": "7798090162212",
            "637": "7798145140202",
            "6008": "7798090163073",
            "6382": "7794450090492",
            "926": "7798121941885",
            "6206": "7792319009906",
            "3705": "7798132462454",
            "6321": "7794450090713",
            "418": "8026143003816",
            "6215": "8000015433000",
            "6662": "8023354030112",
            "722": "8001935003205",
            "6721": "5601174301006",
            "5915": "5010867410220",
            "753": "5600813190360",
            "544": "5604424108011",
            "3700": "5601174280011",
            "6279": "7730374000315",
            "871": "3191742000056",
            "6045": "8437003214073",
            "6022": "8437008928029",
            "667": "7896756800468",
            "863": "7896756806071"
        }




    def conect(self, loja, endereco):

        try:
            con = fdb.connect(
                dsn=endereco,
                user='SYSDBA',
                password='475869',
                charset='ISO8859_2',
            )
            print(f"Conectado com sucesso à loja: {loja}")
            return con
        except Exception as e:
            print(f"ERRO AO CONECTAR na loja {loja}: {e}")
            return None 

    def search_code(self): 
        
        try:
            for loja, endereco in self.enderecos.items():
                con = self.conect(loja, endereco)
                if not con:
                    continue
                for cod_pdv, cod_barra in self.item_list.items():
                    cod_pdv_format = str(cod_pdv).zfill(4)
                    print(cod_pdv_format)

                        
                    try:
                        cur = con.cursor()
                        cur.execute("SELECT * FROM RST002 WHERE COD_RED = ?", [cod_pdv_format])
                        results = cur.fetchall()
                        if results:
                            print("==================================================================================================")
                            print("\nCódigo_PDV encontrado !!")
                            print("Update....\n")
                            cur.execute("UPDATE RST002 SET COD_BARRA = ? WHERE COD_RED = ?", [cod_barra, cod_pdv_format])
                            con.commit()
                            print("Código_BARRAS alterado !\n")
                            print("==================================================================================================")

                        else:
                            print("não encontrado")

                    except Exception as e:
                        print(f"ERRO ao consultar na loja {loja}: {e}")
        except Exception as e:
            print(f"ERRO {e}")
        finally:
            cur.close()
            con.close()



if __name__ == "__main__":
    verificador = search_codeBar()
    verificador.search_code()